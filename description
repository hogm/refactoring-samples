level-000　リファクタリング前。エラーあり。

level-100　エラー除去
　　　　　　　ifの判定が=になっている。
　　　　　　　continueの後に;がない。
　　　　　　do..whileをforに変更
　　　　　　　後判定のループは読みづらい。forで書いた方が簡潔になる。

level-200　ifの連発をelse ifに変更。
      　　　　ソースコードを短くする。

level-300　計算用の変数を削除。
　　　　　　カウンタの変数名をiに変更。
　　　　　　　変数名aでは何のための変数かわからない。
　　　　　　　Indexのiを変数名にするのは習慣としてOK。

level-400　ifの条件式を関数化。
             FizzかBuzzかの判定であることを、関数名で明確にする。

level-500　FizzBuzz取得ロジックを関数化。
　　　　　　　メインのFizzBuzz取得ロジックが長く簡潔でないため、
　　　　　　　FizzBuzz表示用の文字に変換する部分を関数化する。
　　　　　　リテラルを定数化（最小限）
　　　　　　　リテラルを直接記述すると、後で見た時に何を示す値なのか分からなくなるため、
　　　　　　　定数として宣言して使用する。

level-510　リテラルを定数化（全て）←これは不要
　　　　　　　普遍的な値を定数化すると返ってソースコードが読みづらいものになる。

level-600　三項演算子を利用
　　　　　　　行数を減らしてすっきりさせる。
　　　　　　　しかし一時変数が出現してしまった。

level-700  一時変数の排除
           関数名見直し
           　似たような役割の関数が増えたため。

level-800  FizzBuzzをクラス化
　　　　　　　クラス化することで数値の意味が明確になったので、数値を定数ではなく直接指定にする。

level-XXX  コードの長さを短めにした
　　　　　　　簡単なプログラムなので、実際はこれくらいが良いのかもしれない。
